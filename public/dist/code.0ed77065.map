{"version":3,"sources":["get_params.js","code.js"],"names":["params","params_arr","location","search","slice","split","params_obj","forEach","param","arr","key","val","page","document","getElementById","cli","new_class","className","qr_ele","load","detail","txcurrcd","txamt","data_type","p1","p3","decodeURIComponent","e","type","innerHTML","setData","res","data","style","display","info_params","id","p2","axios","get","then","catch","get_params","setURL","qrcode","replace","qr","src"],"mappings":";;;AAWC,aAXc,SAAW,IACrBA,IACAC,EADSC,SAASC,OAAOC,MAAM,GACXC,MAAM,KAC1BC,EAAa,GAOVA,OANPL,EAAWM,QAAQ,SAAAC,GACXC,IAAAA,EAAMD,EAAMH,MAAM,KAClBK,EAAMD,EAAI,GACVE,EAAMF,EAAI,GACdH,EAAWI,GAAOC,IAEfL,EACP,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACqDA,aA/DD,QAAA,eACA,IAAA,EAAA,EAAA,QAAA,iBA8DC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA7DD,IAAIM,EAAOC,SAASC,eAAe,QAC/BC,EAAMF,SAASC,eAAe,UAC9BE,EAAYJ,EAAKK,UACjBC,EAASL,SAASC,eAAe,MACjCK,EAAON,SAASC,eAAe,QAC/BM,EAASP,SAASC,eAAe,UACjCO,EAAWR,SAASC,eAAe,YACnCQ,EAAQT,SAASC,eAAe,SACnCR,GAAa,EARd,EAAA,WAUIiB,EAAY,GAChB,GAAGjB,EAAWkB,IAAMlB,EAAWmB,GAAG,CAC9BF,EAAYjB,EAAWkB,GAAKlB,EAAWmB,GACpC,IACCF,EAAYG,mBAAmBH,GAClC,MAAMI,GACHJ,EAAY,IAGpB,IAAIK,EAAO,SACX,OAAOL,GACE,IAAA,QACDK,EAAO,SACPb,EAAIc,UAAY,MAChB,MACC,IAAA,OACDD,EAAO,SACPb,EAAIc,UAAY,KAChB,MACJ,QACID,EAAO,SACPb,EAAIc,UAAY,MAExB,SAASC,EAAQC,GACTC,IAAAA,EAAOD,EAAIC,KACfX,EAASQ,UAAYG,EAAKX,SAC1BC,EAAMO,UAAYG,EAAKV,MACvBF,EAAOa,MAAMC,QAAU,QAE3B,IAAIC,EAAc,CACjBnC,OAAQ,CACPoC,GAAI9B,EAAW+B,KAGjBC,MAAMC,IAAI,qBAAsBJ,GAC3BK,KAAKV,GAASW,MAAM,SAAAV,GACjBO,MAAMC,IAAI,2CAA4CJ,GAAaK,KAAKV,KAEhF,IAAIY,EAAa,CACb1C,OAAQ,CACJ4B,KAAMA,EACZQ,GAAI9B,EAAW+B,KAMjB,SAASM,EAAOZ,GACRa,IAAAA,EAASb,EAAIC,KAAKY,OAAOC,QAAQ,IAAM,KAC7C1B,EAAKc,MAAMC,QAAU,OACrBY,GAAGC,IAAMH,EANXN,MAAMC,IAAI,oBAAqBG,GAAYF,KAAKG,GAAQF,MAAM,SAAAV,GAC1DO,MAAMC,IAAI,0CAA2CG,GAAYF,KAAKG","file":"code.0ed77065.map","sourceRoot":"..\\src","sourcesContent":["export default function (){\r\n\tlet params = location.search.slice(1)\r\n\tlet params_arr = params.split('&')\r\n\tlet params_obj = {}\r\n\tparams_arr.forEach(param => {\r\n\t    let arr = param.split('=')\r\n\t    let key = arr[0]\r\n\t    let val = arr[1]\r\n\t    params_obj[key] = val\r\n\t})\r\n\treturn params_obj\r\n}\r\n","// import QRCode from 'qrcode'\r\nimport './code.less'\r\nimport getParams from './get_params'\r\nlet page = document.getElementById('page'), \r\n    cli = document.getElementById('client'),\r\n    new_class = page.className,\r\n    qr_ele = document.getElementById('qr'),\r\n    load = document.getElementById('load'),\r\n    detail = document.getElementById('detail'),\r\n    txcurrcd = document.getElementById('txcurrcd'),\r\n    txamt = document.getElementById('txamt'),\r\n\tparams_obj = getParams()\r\n\r\nlet data_type = ''\r\nif(params_obj.p1 && params_obj.p3){\r\n    data_type = params_obj.p1 + params_obj.p3\r\n    try{\r\n        data_type = decodeURIComponent(data_type)\r\n    }catch(e){\r\n        data_type = ''\r\n    }\r\n}\r\nlet type = '800101' //默认支付宝支付\r\nswitch(data_type){\r\n    case '支付宝支付':\r\n        type = '800101'\r\n        cli.innerHTML = '支付宝'\r\n        break\r\n    case '微信支付':\r\n        type = '800201'\r\n        cli.innerHTML = '微信'\r\n        break\r\n    default:\r\n        type = '800101'\r\n        cli.innerHTML = '支付宝'\r\n}\r\nfunction setData(res){\r\n    let data = res.data\r\n    txcurrcd.innerHTML = data.txcurrcd\r\n    txamt.innerHTML = data.txamt\r\n    detail.style.display = 'block'\r\n}\r\nlet info_params = {\r\n\tparams: {\r\n\t\tid: params_obj.p2\r\n\t}\r\n}\r\naxios.get('/api/v1/order/info', info_params)\r\n    .then(setData).catch(res => {\r\n        axios.get('http://qpay.mengant.cn/api/v1/order/info', info_params).then(setData)\r\n    })\r\nlet get_params = {\r\n    params: {\r\n        type: type,\r\n\t\tid: params_obj.p2\r\n    }\r\n}\r\naxios.get('/api/v1/pay/qcode', get_params).then(setURL).catch(res => {\r\n    axios.get('http://qpay.mengant.cn/api/v1/pay/qcode', get_params).then(setURL)\r\n})\r\nfunction setURL(res){\r\n    let qrcode = res.data.qrcode.replace('\\/', '/')\r\n\t\tload.style.display = 'none'\r\n\t\tqr.src = qrcode\r\n}\r\n"]}